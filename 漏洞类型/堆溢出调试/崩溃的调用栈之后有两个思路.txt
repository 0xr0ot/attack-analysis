看到崩溃的调用栈之后有两个思路，一个是跟踪被污染的ecx，看其在哪里修改，被哪个函数修改，为什么被修改，搞清楚了这几个问题，一般漏洞的原因也就清楚了。另一个思路是用windbg的s命令在内存中搜索被污染的数据，这里是00414114。由于每次崩溃点都不稳定，且好几次都崩溃在ntdll中关于堆的操作中，所以断定是堆溢出。在堆溢出的条件下，采用第二个方向能更快的找出问题所在。